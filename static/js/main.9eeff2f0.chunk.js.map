{"version":3,"sources":["context/TodoContext.js","components/Todo.jsx","components/TodoList.jsx","App.js","context/reducer.js","index.js"],"names":["TodoLayerContext","createContext","TodoLayer","initialState","reducer","children","Provider","value","useReducer","useTodoLayerValue","useContext","Todo","todo","dispatch","useState","editable","setEditable","content","setContent","className","isCompleted","onClick","id","type","payload","onChange","e","target","todoId","newValue","updateTodo","TodoList","todos","map","App","inputRef","useRef","useEffect","current","focus","onSubmit","preventDefault","length","newTodo","Math","floor","random","ref","state","action","console","log","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9eeff2f0.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const TodoLayerContext = createContext(0)\r\n\r\nexport const TodoLayer = ({initialState, reducer, children}) => {\r\n    return (\r\n        <TodoLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n            { children }\r\n        </TodoLayerContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useTodoLayerValue = () => useContext(TodoLayerContext)\r\n\r\n","import React, { useState } from \"react\";\r\nimport { GrFormClose, GrFormEdit, GrFormCheckmark } from \"react-icons/gr\";\r\nimport { useTodoLayerValue } from \"../context/TodoContext\";\r\n\r\nconst Todo = ({ todo }) => {\r\n  // eslint-disable-next-line\r\n  const [{}, dispatch] = useTodoLayerValue();\r\n  const [editable, setEditable] = useState(false);\r\n  const [content, setContent] = useState(todo.content);\r\n  const removeTodo = (id) => {\r\n    dispatch({\r\n      type: \"REMOVE_TODO\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const completedTodo = (id) => {\r\n    dispatch({\r\n      type: \"COMPLETE_TODO\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const updateTodo = ({ todoId, newValue }) => {\r\n    dispatch({\r\n      type: \"UPDATE_TODO\",\r\n      payload: {\r\n        todoId,\r\n        newValue,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={todo.isCompleted ? \"todo-row completed\" : \"todo-row\"}>\r\n      <div onClick={() => (editable ? \"\" : completedTodo(todo.id))}>\r\n        {editable ? (\r\n          <input\r\n            type=\"text\"\r\n            value={content}\r\n            className=\"todo-input-edit\"\r\n            onChange={(e) => setContent(e.target.value)}\r\n          />\r\n        ) : (\r\n          todo.content\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"todo-icons\">\r\n        <GrFormClose\r\n          className=\"todo-icon\"\r\n          onClick={() => removeTodo(todo.id)}\r\n        />\r\n\r\n        {editable ? (\r\n          <GrFormCheckmark\r\n            className=\"todo-icon\"\r\n            onClick={() => {\r\n              updateTodo({ todoId: todo.id, newValue: content });\r\n              setContent(\"\");\r\n              setEditable(false);\r\n            }}\r\n          />\r\n        ) : (\r\n          <GrFormEdit className=\"todo-icon\" onClick={() => setEditable(true)} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from 'react'\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({todos}) => {\r\n    return (\r\n        <div className=\"todo-list\">\r\n            {todos && todos.map(todo => (\r\n                <Todo key={todo.id} todo={todo} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import { useTodoLayerValue } from \"./context/TodoContext\";\nimport \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [{ todos }, dispatch] = useTodoLayerValue();\n  const [content, setContent] = useState(\"\");\n\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!content && content.length < 1) return;\n\n    const newTodo = {\n      id: Math.floor(Math.random() * 1232),\n      content,\n      isCompleted: false,\n    };\n\n    dispatch({\n      type: \"ADD_TODO\",\n      payload: newTodo,\n    });\n    setContent(\"\");\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"todo-form\">\n        <input\n          type=\"text\"\n          className=\"todo-input\"\n          onChange={(e) => setContent(e.target.value)}\n          value={content}\n          ref={inputRef}\n        />\n        <button className=\"todo-button\">Add</button>\n      </form>\n\n      {/* Todo List */}\n      <TodoList todos={todos} />\n    </div>\n  );\n}\n\nexport default App;\n","export const initialState = {\r\n  todos: [\r\n    {\r\n      id: 0,\r\n      content: \"Ä°lk todo\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: [action.payload, ...state.todos],\r\n      };\r\n    case \"REMOVE_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos].filter((todo) => todo.id !== action.payload),\r\n      };\r\n\r\n    case \"COMPLETE_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo.id !== action.payload) {\r\n            return todo;\r\n          }\r\n\r\n          return {\r\n            ...todo,\r\n            isCompleted: !todo.isCompleted,\r\n          };\r\n        }),\r\n      };\r\n\r\n    case \"UPDATE_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo.id !== action.payload.todoId) {\r\n            return todo;\r\n          }\r\n\r\n          return {\r\n            ...todo,\r\n            content: action.payload.newValue,\r\n          };\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TodoLayer} from \"./context/TodoContext\";\nimport reducer, { initialState } from \"./context/reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <TodoLayer initialState={initialState} reducer={reducer}>\n          <App />\n      </TodoLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}